getwd()
library("ggplot2")
str(diamonds)
head(diamonds)
plot(diamonds
)
plot(diamonds)
plot(diamonds)
set.seed(12345)
Pop<-rnorm(100000,mean=4,sd=2)  #正态总体，均值为4，标准差为2
MeanX<-vector()
for(i in 1:2000){
x<-sample(Pop,size=1000,replace=TRUE)
MeanX<-c(MeanX,mean(x))
}
plot(density(MeanX),xlab="mean(x)",ylab="Density",main="样本均值的抽样分布",cex.main=0.7,cex.lab=0.7)
points(mean(MeanX),sd(MeanX),pch=1,col=1)
points(4,sqrt(2^2/1000),pch=2,col=2)
par(mfrow=c(2,1),mar=c(4,4,4,4))
set.seed(12345)
Pop1<-rnorm(10000,mean=2,sd=2)   ###两总体方差相等
Pop2<-rnorm(10000,mean=10,sd=2)
Diff<-vector()
Sdx1<-vector()
Sdx2<-vector()
for(i in 1:2000){
x1<-sample(Pop1,size=100,replace=TRUE)
x2<-sample(Pop2,size=120,replace=TRUE)
Diff<-c(Diff,(mean(x1)-mean(x2)))
Sdx1<-c(Sdx1,sd(x1))
Sdx2<-c(Sdx2,sd(x2))
}
plot(density(Diff),xlab="mean(x1)-mean(x2)",ylab="Density",main="均值差的抽样分布(等方差)",cex.main=0.7,cex.lab=0.7)
points(mean(Diff),sd(Diff),pch=1,col=1)
S1<-mean(Sdx1)
S2<-mean(Sdx2)
Sp<-((100-1)*S1^2+(120-1)*S2^2)/(100+120-2)
points((2-10),sqrt(Sp/100+Sp/120),pch=2,col=2)
set.seed(12345)
Pop1<-rnorm(10000,mean=2,sd=2)    ###两总体方差不等
Pop2<-rnorm(10000,mean=10,sd=4)
Diff<-vector()
Sdx1<-vector()
Sdx2<-vector()
for(i in 1:2000){
x1<-sample(Pop1,size=100,replace=TRUE)
x2<-sample(Pop2,size=120,replace=TRUE)
Diff<-c(Diff,(mean(x1)-mean(x2)))
Sdx1<-c(Sdx1,sd(x1))
Sdx2<-c(Sdx2,sd(x2))
}
plot(density(Diff),xlab="mean(x1)-mean(x2)",ylab="Density",main="均值差的抽样分布(不等方差)",cex.main=0.7,cex.lab=0.7)
points(mean(Diff),sd(Diff),pch=1,col=1)
S1<-mean(Sdx1)
S2<-mean(Sdx2)
points((2-10),sqrt(S1^2/100+S2^2/120),pch=2,col=2)
par(mfrow = c(2, 2),mar = c(4, 4, 1, 0.5))
R1.PValue<-vector(length=1000)
R2.PValue<-vector(length=1000)
set.seed(123)
for(i in 1:1000){
##样本量相等条件下
X1<-rnorm(100,mean=0,sd=runif(1,0.5,1))  #产生服从均值为0，标准差来自U（0.5,1）的正态分布随机数100个
X2<-rnorm(100,mean=1,sd=runif(1,2,5))  #产生服从均值为1，标准差来自U（2,5）的正态分布随机数100个
R1<-t.test(X1,X2,var.equal=TRUE)  #两独立样本的均值检验，并假设方差齐性
R1.PValue[i]<-R1$p.value  #得到检验的P值
R2<-t.test(X1,X2,var.equal=FALSE)  #两独立样本的均值检验，并假设方差不齐
R2.PValue[i]<-R2$p.value  #得到检验的P值
}
plot(R2.PValue,R1.PValue,xlab="方差不齐",ylab="方差齐性",pch=1,col=2)
abline(0,1)  #直线的截距为0，斜率为1
plot(R2.PValue,R1.PValue-R2.PValue,xlab="方差不齐",ylab="等方差减异方差",pch=1,col=2)
R1.PValue<-vector(length=1000)
typeof(i)
typeof(R2)
typeof(x1)
a<-123.4
a<-integer(a)
a
a<-123.4
a
a<-as.integer(a)
a
x2<-c("Poor","Improved","Excellent","Poor")
x2
f1<-as.factor(x2)
levels(f1)
fq
f1
install.packages('maps')
library('maps')
map
map(database='world')
map(database='China')
map(database='ChinaMapEnv')
map(database='America')
map(database='Europe')
install.packages('maps')
library('maps')
map(database='world',region='.',fill=Ture,col=rainbow(200))
tirle('世界地图')
install.packages("maps")
library('maps')
map(database='world')
map(database='world'，col=rainbow(2,s=1,v=1))
map(database='world'，col=rainbow(200))
map(database='world')
install.packages("installr")
require(installr)
updateR()
install.packages("installr")
oldip <- installed.packages()[,1]
save(oldip, file="installedPackages.Rdata")
load("installedPackages.Rdata")
newip <- installed.packages()[,1]
for(i in setdiff(oldip, newip)) install.packages(i)
install.packages("installr")
install.packages("installr")
library("installr")
install.packages("installr")
library(installr)
detach("package:installr", unload=TRUE)
library("installr", lib.loc="D:/R/R-3.3.2/library")
detach("package:installr", unload=TRUE)
install.packages("installr")
library(installr)
install.packages("install.load")
library(install.load)
install.packages(“installr”)
require(installr)#load/install + load installr
updateR()
updateR()
ds = read.csv("http://www.amherst.edu/~nhorton/r2/datasets/help.csv")
install.packages("SparseM")
View(ds)
library("vioplot")
install.packages("RCurl")
library("rcurl")
library("RCurl")
rnews<-getURL("https://cran.rstudio.com/bin/windows/base/NEWS.R-3.3.3.html")
rnews
search()
search(RCurl)
help.start
library("maps")
map(database = "world")
map(database = "world",regions = ".",fill = TURE,col = rainbow(200))
map(database = "world",regions = ".",fill = TRUE,col = rainbow(200))
map(database = "world",regions = ".",fill = TRUE,col = rainbow(150))
install.packages(“xlsx”)
install.packages('xlsx')
library("xlsx")
install.packages("rJava")
install.packages("xlsxjars")
install.packages("xlsxjars")
install.packages("xlsxjars")
install.packages("xlsxjars")
library("xlsx")
library("rJava")
library("xlsx")
q()
library("xlsx")
install.packages("xlsxjars")
install.packages("xlsxjars")
library("xlsx")
library("rJava")
movepackages("rJava")
library("rJava", lib.loc="D:/R/R-3.3.3/library")
remove.packages("rJava")
install.packages("rJava")
library("xlsx")
remove.packages("xlsx")
remove.packages("xlsx")
install.packages("xlsx")
library("xlsx")
data("AirPassengers")
View("AirPassengers")
AirPassengers
plot("AirPassengers")
seq("AirPassengers")
polt(seq)
plot(seq)
plot(jan)
plot("jan")
library("xlsx")
library("rjava")
library("rJava")
library("xlsx")
---
```{r,echo=F}
ReportCard1<-read.table(file="ReportCard1.txt",header=TRUE)
ReportCard2<-read.table(file="ReportCard2.txt",header=TRUE)
ReportCard<-merge(ReportCard1,ReportCard2,by="xh")
ReportCard1<-read.table(file="ReportCard1.txt",header=TRUE)
names(ReportCard1)
ReportCard2<-read.table(file="ReportCard2.txt",header=TRUE)
names(ReportCard2)
ReportCard<-merge(ReportCard1,ReportCard2,by="xh")
names(ReportCard)
fix(ReportCard)
MaleScore2<-subset(ReportCard,ReportCard$sex=="M")
fix(MaleScore2)
View(ReportCard)
ReportCard1<-read.table(file="ReportCard1.txt",header=TRUE)
names(ReportCard1)
ReportCard2<-read.table(file="ReportCard2.txt",header=TRUE)
ReportCard<-merge(ReportCard1,ReportCard2,by="xh")
names(ReportCard)
fix(ReportCard)
ReportCard1<-read.table(file="ReportCard1.txt",header=TRUE)
names(ReportCard1)
ReportCard2<-read.table(file="ReportCard2.txt",header=TRUE)
names(ReportCard2)
ReportCard<-merge(ReportCard1,ReportCard2,by="xh")
names(ReportCard)
unique(ReportCard$sex)
ReportCard$sex<-factor(ReportCard$sex,levels=c(1,2),labels=c("M","F"))
str(ReportCard$sex)
Sel1<-ReportCard$sex=="M"
MaleScore1<-ReportCard[Sel1,]
fix(MaleScore1)
MaleScore2<-subset(ReportCard,ReportCard$sex=="M")
View(MaleScore2)
View(MaleScore2)
MaleScore2<-subset(ReportCard,ReportCard$sex=="M",select=c(chi,math))
fix(MaleScore2)
MaleScore2<-subset(ReportCard,ReportCard$sex=="M",select=phy:his)
fix(MaleScore2)
View(MaleScore1)
View(MaleScore1)
View(MaleScore2)
View(MaleScore2)
MaleScore2<-subset(ReportCard,ReportCard$sex=="F",select=phy:his)
View(MaleScore2)
View(MaleScore2)
MaleScore2<-subset(ReportCard,ReportCard$sex=="F",select=chi:fore)
View(MaleScore2)
View(MaleScore2)
> 如果改一下上述语句，挑选女生的语数外三门主课成绩，如何改？
FemaleScore<-subset(RReportCard,ReportCard$sex=="F",select=chi:fore)
> 如果改一下上述语句，挑选女生的语数外三门主课成绩，如何改？
FemaleScore<-subset(ReportCard,ReportCard$sex=="F",select=chi:fore)
View(FemaleScore)
View(FemaleScore)
attach(ReportCard)
SumScore<-poli+chi+math+fore+phy+che+geo+his
detach(ReportCard)
AvScore<-SumScore/8
ReportCard$sumScore<-SumScore
ReportCard$avScore<-AvScore
ReportCard<-within(ReportCard,{
avScore[avScore>=90]<-"A"
avScore[avScore>=80 & avScore<90]<-"B"
avScore[avScore>=70 & avScore<80]<-"C"
avScore[avScore>=60 & avScore<70]<-"D"
avScore[avScore<60]<-"E"
})
flag<-ReportCard$avScore %in% c("A","B","C","D","E")
ReportCard$avScore[!flag]<-NA
```
* 两个条件同时满足，与操作
```{r}
MaleScore3<-subset(ReportCard,ReportCard$sex=="M" & ReportCard$avScore=="E")
```
* 两个条件中一个条件满足即可，或操作
```{r}
MaleScore4<-subset(ReportCard,ReportCard$sex=="F" | ReportCard$avScore=="B")
```
> 问题来了，对下面的leadership数据，如何挑选30岁以上的所有男性？
```{r,echo=F}
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08",
"5/1/09")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors = FALSE)
View(leadership)
View(leadership)
View(leadership)
View(leadership)
set.seed(10000)
bh<-sample(1:60,size=30,replace=FALSE)
MySample<-ReportCard[bh,]
set.seed(10000)
bh<-sample(1:60,size=30,replace=FALSE)
MySample<-ReportCard[bh,]
newdata <- leadership[, c(6:9)]
myvars <- c("q1", "q2", "q3", "q4", "q5")
newdata <- leadership[myvars]
myvars <- paste("q", 1:5, sep = "")
newdata <- leadership[myvars]
View(leadership)
View(leadership)
s=0
for(i in 1:10){
s=s+i
print(s)
}
s<-0
i<-1
while(i<=10){
s<-s+i
i<-i+1
print(s)
}
s<-0
i<-1
repeat{
if(i<=10){
s<-s+i
i<-i+1} else
break
print(s)
}
Price<-360
if(Price<200) print("No discount!")
if(Price>=200 & Price<500)  print("off 3%")
if(Price>500 & Price<1000) print("off 5%")
if(Price>=1000 & Price<2500) print("off 8%")
if(Price>=2500 & Price<5000) print("off 10%")
if(Price>=5000) print("off 15%")
if(Price<200) print("No discount!") else{
if(Price>=200 & Price<500) print("off 3%") else{
if(Price>=500 & Price<1000) print("off 5%") else{
if(Price>=1000 & Price<2500) print("off 8%") else{
if(Price>=2500 & Price<5000) print("off 10%") else
print("off 15%")
}
}
}
}
ifelse(Price > 200, "off >= 3%", "No discount")
> switch(expression, case1, case2, case3....)
feelings <- c("sad", "afraid")
for (i in feelings)
print(
switch(i,
happy  = "I am glad you are happy",
afraid = "There is nothing to fear",
sad    = "Cheer up",
angry  = "Calm down now"
)
)
mydate <- function(type="long") {
switch(type,
long =  format(Sys.time(), "%A %B %d %Y"),
short = format(Sys.time(), "%m-%d-%y"),
cat(type, "is not a recognized type\n"))
}
mydate("long")
mydate("short")
mydate()
mydate("medium")
getwd()
setwd("D:/Documents/时间管理/丁酉年春")
read.table
read.table(file="公历四月.txt")
knitr::opts_chunk$set(echo = FALSE)
setwd("D:/Documents/时间管理/丁酉年春")
library(foreign)
zhou<-read.spss(file = "周视图.sav")
zhou<-as.data.frame(zhou)
str(zhou)
View(zhou)
attach(zhou)
plot(date,lastsleep,type = "S")
detach(zhou)
setwd("D:/Documents/时间管理/丁酉年春")
library(foreign)
zhou<-read.spss(file = "周视图.sav")
zhou<-as.data.frame(zhou)
str(zhou)
attach(zhou)
plot(purestudy,type="s")
detach(zhou)
attach(zhou)
plot(badtime,type="s")
detach(zhou)
attach(zhou)
plot(date,lastsleep,type = "S")
detach(zhou)
attach(zhou)
ggplot(lastsleep)
help(ggplot)
help("ggplot")
help("ggplot2")
attach(zhou)
plot.ggplot(lastsleep)
attach(zhou)
plot(lastsleep)
detach(zhou)
help("plot")
attach(zhou)
plot(lastsleep,type = "l")
detach(zhou)
attach(zhou)
plot(lastsleep,type = "l",xlab = "日期"，ylab="时间")
attach(zhou)
plot(lastsleep,type = "l",xlab = "日期"，ylab ="时间")
attach(zhou)
plot(lastsleep,type = "l",xlab = "日期"，ylab = "时间")
attach(zhou)
plot(lastsleep,type = "l",xlab = "日期",ylab = "时间")
detach(zhou)
attach(zhou)
plot(purestudy,type="s")
detach(zhou)
attach(zhou)
plot(purestudy,type="s",ylab="纯学习时间",xlab="日期")
detach(zhou)
attach(zhou)
plot(badtime,type="s")
detach(zhou)
attach(zhou)
plot(badtime,type="s",ylab = "手机费正能量时间",xlab="日期")
detach(zhou)
str(zhou)
mode(ln)
mode(today)
attach(zhou)
plot(lastsleep,type = "l",xlab = "日期",ylab = "小时")
summary(lastsleep)
detach(zhou)
attach(zhou)
plot(lastsleep,type = "l",xlab = "日期",ylab = "小时")
s<-summary(lastsleep)
detach(zhou)
s
attach(zhou)
plot(lastsleep,type = "l",xlab = "日期",ylab = "小时")
s<-summary(lastsleep)
str(s)
detach(zhou)
